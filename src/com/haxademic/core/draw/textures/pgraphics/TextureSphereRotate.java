package com.haxademic.core.draw.textures.pgraphics;

import com.haxademic.core.app.P;
import com.haxademic.core.data.ConvertUtil;
import com.haxademic.core.draw.textures.pgraphics.shared.BaseTexture;
import com.haxademic.core.media.audio.analysis.AudioIn;

public class TextureSphereRotate
extends BaseTexture {

	protected String[] points84 = "0.526944280602,0.608821821399,-0.593014091253,-0.613110743463,-0.098880603909,-0.783784307539,0.746668769047,0.537699215114,0.391618821770,0.676032645628,-0.535827864893,0.505834320560,0.917396396399,-0.315986326896,-0.241943159141,0.341865370981,-0.932535633445,-0.116212563589,-0.738985716365,-0.670502409339,0.065777118318,0.443994080648,-0.384863865562,0.809165656567,-0.676629702561,-0.644184919074,-0.356648335233,-0.300410559401,-0.302737368271,0.904490784742,-0.021965662949,0.997394285165,-0.068717892282,-0.588662968017,0.401325846091,0.701721792109,0.087201025337,0.007982521318,-0.996158752590,0.381583701819,0.314517144114,-0.869179408066,0.690942420624,-0.548331554979,-0.471095612273,0.879411512986,0.187995106913,0.437370814383,-0.865132330917,0.307519996539,0.396203863434,0.453147404827,-0.465809299611,-0.760052054189,-0.034728338942,-0.943189034238,-0.330436659977,0.726319896057,0.264169761911,-0.634565791115,0.168474552222,-0.352156806737,-0.920652979054,0.100606517866,-0.268755822442,0.957939786837,0.059292525053,0.739362621680,0.670691664331,-0.197455635294,0.466966887005,0.861947328784,-0.266572274268,-0.186651173979,-0.945568908937,-0.334934971295,-0.644911902025,0.686955021694,-0.016075634398,0.932888689451,0.359805871733,-0.358705699444,0.731450646184,0.579922556877,0.996761107817,-0.035062101670,0.072373632342,-0.462567841634,0.098493211903,0.881095953286,0.101239473559,-0.728784633800,-0.677217487246,0.325525846332,-0.723298515193,0.608992758207,0.618799240328,0.258064074442,0.741950424388,0.031322170980,-0.606143820100,0.794738063589,-0.592043256387,0.354847364128,-0.723580078222,0.192458055913,0.385727162473,0.902316159569,-0.853660036810,-0.273292364553,-0.443368721753,-0.674162020907,0.652249483392,0.346520098858,-0.364082926884,0.909717923030,0.199641982093,0.400431923568,0.830496920273,0.387206841260,0.877085509710,-0.469932737760,0.099419463426,0.496428115293,-0.051682547666,-0.866537962109,-0.088937442750,-0.871676865034,0.481943536550,-0.577359545976,0.672240030952,-0.463410502300,0.255790253170,-0.925150734372,0.280477208085,-0.832607110962,0.443685837090,-0.331524169073,0.351258908398,0.045790974051,0.935157936066,-0.064991176128,-0.996711337939,0.048400975764,-0.557407052256,-0.459719415754,-0.691343210638,-0.095610667951,0.080830737017,0.992131539620,-0.919793812558,0.390519618057,0.038389706053,-0.009574473836,0.394604491070,-0.918801188469,0.324623173103,0.943325044587,0.068975751288,-0.702564224601,0.711202410050,-0.024385241792,-0.921792297624,-0.379167842679,-0.080812782049,0.707454251125,0.701117606834,0.089121168479,-0.276149771176,0.616902850568,-0.737002154812,-0.331677031703,0.190913556144,-0.923873562366,0.217463291250,0.898040109314,-0.382405122742,-0.629833829589,-0.285656523891,0.722294743173,0.761693501845,-0.162117084488,-0.627328508534,-0.405229659751,-0.871092726476,0.277464203537,0.938735998236,0.342657523230,0.036885580048,0.685038526542,-0.715060725808,-0.139321120456,0.176267993636,0.683496822603,-0.708351386711,0.451857949607,0.583004449494,0.675226039253,-0.148262022994,0.858126042411,-0.491566949524,-0.318907637149,-0.791998762637,-0.520611060783,0.682309365831,-0.119823961519,0.721176916733,-0.190503307618,-0.530015624128,-0.826312244870,0.825570294634,0.483929789625,-0.290251004510,0.367600551806,-0.802978877909,-0.469142572954,-0.635383794084,-0.611744885333,0.471227787435,-0.392374783754,0.897458653897,-0.201519212686,-0.874767340720,-0.340591032989,0.344644521363,0.941273682751,0.073929551058,-0.329451474361,-0.986101686954,0.041901087388,-0.160772390664,-0.838859658688,0.119077337906,-0.531163873151,-0.977533217520,-0.040232050233,0.206906234846,0.884412145242,-0.217233926058,0.413067278452,0.548219063319,0.799567618407,-0.245249832980,-0.434802542441,-0.892331928015,-0.121204284020,-0.787505713291,0.003570439294,0.616297007538,0.598914629780,-0.766757654957,0.231049699709".split(",");
	protected float[] points = new float[84*3];
	protected boolean _isWireframe = true;
	
	public TextureSphereRotate( int width, int height ) {
		super(width, height);

		
		
		float radius = width * 2;
		for( int i=0; i < points84.length; i++ ) {
			points[i] = ConvertUtil.stringToFloat( points84[i] ) * radius;
		}
	}
	
	public void newLineMode() {
		_isWireframe = !_isWireframe;
	}
	
	public void draw() {
//		_texture.clear();
		pg.background(0);
		
		pg.translate( width * 0.5f, height * 0.5f );
		pg.rotateY( P.p.millis() * 0.0002f );
		
		if( _isWireframe == true ) {
			pg.noFill();
			pg.strokeWeight(3);
			pg.stroke( _colorEase.colorInt() );
		} else {
			pg.noStroke();
			pg.fill( _colorEase.colorInt(), 80 );
		}
		
		float size = 20;
		for( int i=0; i < points.length; i+=3 ) {
			float amp = AudioIn.audioFreq( i%512 );
			amp = AudioIn.audioFreq(i) * 65f;

			pg.pushMatrix();
			pg.translate(points[i], points[i+1], points[i+2]);
			pg.box(size * amp, size * amp, size * amp);
			pg.popMatrix();
		}
	}
}
